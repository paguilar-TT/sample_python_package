name: Deploy, Style Check, and Test

env:
  MIN_COV_PERCENT: 70
  MAX_LINE_LENGTH: 79

  MAIN_PACKAGE: ../python_package
  REQUIREMENTS: ../python_package/calculator/requirements.txt
  SRC: ../python_package/calculator/src
  TST: ../python_package/calculator/tst

  RESULTS: results
  CODE_STYLE: results/code_style
  TEST_RESULTS: results/test_results
  CODE_COVERAGE: results/code_coverage

on:
  push:
    
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '0 * * * *'

jobs:
    
  build:

    runs-on: ubuntu-latest
  
    steps:

    - name: Checkout sample_test_package
      uses: actions/checkout@v2
      with:
        repository: paguilar-TT/sample_test_package
        
    - name: Checkout sample_python_package
      uses: actions/checkout@v2
      with:
        path: ${{ env.MAIN_PACKAGE }}
        
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        
    - name: Install dependencies
      run: |
        echo $REQUIREMENTS
        python -m pip install --upgrade pip
        pip install -r $REQUIREMENTS
        
    - name: Create artifact directories
      run: |
        mkdir $RESULTS
        mkdir $CODE_STYLE
        mkdir $CODE_COVERAGE
        mkdir $TEST_RESULTS
        echo listing the directory $RESULTS
        ls -l $RESULTS
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E431 --max-line-length $MAX_LINE_LENGTH --show-source --statistics --benchmark --output-file=$CODE_STYLE/flake8_style_check.log --tee
        
    - name: Upload Lint With flake8 Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: code_style_results
        path: ${{ env.CODE_STYLE }}
        
    - name: Test with pytest
      run: |
        pytest $TST/test_calculator.py --verbose --capture=no --html=$TEST_RESULTS/test_calculator.html
        
    - name: Upload Test Results Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test_results
        path: ${{ env.TEST_RESULTS }}
      
    - name: Code coverage check
      run: |
        pytest --cov=$SRC --cov-fail-under=$MIN_COV_PERCENT --cov-report=html:$CODE_COVERAGE
        
    - name: Upload Code Coverage Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: code_coverage_results
        path: ${{ env.CODE_COVERAGE }}
        
    - name: Upload All Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: all_results
        path:  ${{ env.RESULTS }}
  
    - name: Commit
      run: |
        ls -la
        git branch
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git status
        git add -A
        git reset HEAD ${{ env.MAIN_PACKAGE }}
        git rm --cached python_package
        git status
        git commit -m "Add changes"

    - name: Push
      env: 
        ACTION_MAIL: "pablo.aguilar@toptal.com"
        ACTION_NAME: "Pablo Aguilar"
        ACTION_MESSAGE: "Appending data"
      uses: ludeeus/action-push@0.0.1
        #GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
